name: Performance Benchmarks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  benchmark:
    name: Run Benchmarks
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
      with:
        key: benchmark
        cache-all-crates: true

    - name: Build release binary
      run: cargo build --release

    - name: Run benchmarks
      run: |
        cargo bench --bench startup_time -- --output-format bencher | tee startup_output.txt
        cargo bench --bench performance -- --output-format bencher | tee performance_output.txt

    - name: Store benchmark result
      uses: benchmark-action/github-action-benchmark@v1
      with:
        name: MCP Helper Benchmarks
        tool: 'cargo'
        output-file-path: startup_output.txt
        github-token: ${{ secrets.GITHUB_TOKEN }}
        auto-push: true
        # Only push results on main branch
        comment-on-alert: true
        alert-threshold: '120%'
        comment-always: true
        benchmark-data-dir-path: 'dev/bench'

    # Additional startup time analysis
    - name: Measure startup time directly
      run: |
        echo "=== Direct Startup Time Measurements ==="
        echo "Measuring 10 runs of --version flag..."
        
        for i in {1..10}; do
          /usr/bin/time -f "Run $i: %e seconds" ./target/release/mcp --version > /dev/null
        done
        
        echo ""
        echo "Measuring 10 runs of --help flag..."
        
        for i in {1..10}; do
          /usr/bin/time -f "Run $i: %e seconds" ./target/release/mcp --help > /dev/null
        done

    - name: Upload benchmark artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: benchmark-results
        path: |
          startup_output.txt
          performance_output.txt
        retention-days: 30