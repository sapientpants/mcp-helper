name: E2E Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: 'Enable debug mode with tmate session'
        required: false
        default: false

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  CARGO_INCREMENTAL: 0

jobs:
  e2e-tests:
    name: E2E Tests - ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
      with:
        key: ${{ matrix.os }}-e2e
        cache-all-crates: true
        cache-on-failure: true

    - name: Build binary for E2E tests
      run: cargo build --release

    - name: Run E2E basic CLI tests
      run: cargo test --test e2e_basic_cli -- --test-threads=1
      
    - name: Run E2E run command tests
      run: cargo test --test e2e_run_command -- --test-threads=1
      
    - name: Run E2E install command tests
      run: cargo test --test e2e_install_command -- --test-threads=1
      
    - name: Run E2E installation tests
      run: cargo test --test e2e_installation_tests -- --test-threads=1

    # Performance benchmark for startup time
    - name: Benchmark startup time
      shell: bash
      run: |
        echo "=== Startup Time Benchmark ==="
        BINARY_PATH="./target/release/mcp"
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          BINARY_PATH="./target/release/mcp.exe"
        fi
        
        # Warm up
        $BINARY_PATH --version > /dev/null
        
        # Measure startup time (5 runs)
        echo "Running 5 startup time measurements..."
        for i in {1..5}; do
          START=$(date +%s.%N)
          $BINARY_PATH --version > /dev/null
          END=$(date +%s.%N)
          DIFF=$(echo "$END - $START" | bc)
          echo "Run $i: ${DIFF}s"
        done

    # Platform-specific tests
    - name: Platform-specific E2E tests (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        echo "Running Windows-specific E2E tests..."
        cargo test --test e2e_basic_cli test_cli_working_directory -- --exact

    - name: Platform-specific E2E tests (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        echo "Running Unix-specific E2E tests..."
        cargo test --test e2e_basic_cli test_cli_signal_handling -- --exact

    # Debug session for troubleshooting
    - name: Setup tmate debug session
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
      uses: mxschmitt/action-tmate@v3
      with:
        limit-access-to-actor: true

  e2e-summary:
    name: E2E Test Summary
    runs-on: ubuntu-latest
    needs: e2e-tests
    if: always()
    
    steps:
    - name: Check E2E test results
      run: |
        if [[ "${{ needs.e2e-tests.result }}" == "success" ]]; then
          echo "✅ All E2E tests passed on all platforms!"
        else
          echo "❌ Some E2E tests failed. Check the logs above."
          exit 1
        fi